<synth>
	<style id="basicStyle">
		<font name="Verdana" size="12"/>
		<state>
			<color value="BLACK" type="BACKGROUND"/>
			<color value="WHITE" type="FOREGROUND"/>
		</state>
	</style>
	<bind style="basicStyle" type="region" key=".*"/>

	<style id="buttonStyle">
		<font name="Verdana" size="12" style="BOLD"/>	
		<object id="roundedGreyButton" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>30</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<object id="roundedYellowButton" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>30</int>
			</void>
			<void method="setBackgroundColor">
				<string>#FFA848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<insets top="10" left="10" right="10" bottom="10"/>	
		<state>
			<imagePainter method="buttonBackground" idref="roundedGreyButton"/>
		</state>
		<state value="PRESSED">
			<imagePainter method="buttonBackground" idref="roundedYellowButton"/>
			<color value="BLACK" type="TEXT_FOREGROUND"/>
		</state>
	</style>
	<bind style="buttonStyle" type="region" key="Button"/>
	
	<style id="toggleButtonStyle">	
		<font name="Verdana" size="12" style="BOLD"/>	
		<object id="roundedGreyButton" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>6</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<object id="roundedYellowButton" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>6</int>
			</void>
			<void method="setBackgroundColor">
				<string>#FFA848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<insets top="10" left="10" right="10" bottom="10"/>	
		<state>
			<imagePainter method="toggleButtonBackground" idref="roundedGreyButton"/>
		</state>
		<state value="SELECTED">
			<imagePainter method="toggleButtonBackground" idref="roundedYellowButton"/>
			<color value="BLACK" type="TEXT_FOREGROUND"/>
		</state>
	</style>	
	<bind style="toggleButtonStyle" type="region" key="ToggleButton"/>


	<style id="arrowToggleButtonStyle">	
		<object id="eteinte" class="ArrowButtonPainter">
			<void method="setCorner">
				<int>32</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<object id="allumee" class="ArrowButtonPainter">
			<void method="setCorner">
				<int>32</int>
			</void>
			<void method="setBackgroundColor">
				<string>#FFA848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<state>
			<imagePainter method="toggleButtonBackground" idref="eteinte"/>
		</state>
		<state value="SELECTED">
			<imagePainter method="toggleButtonBackground" idref="allumee"/>
		</state>
	</style>	
	<bind style="arrowToggleButtonStyle" type="name" key="ArrowToggleButton"/>


	<style id="arrowUpToggleButtonStyle">	
		<object id="eteinte" class="ArrowButtonPainter">
			<void method="setCorner">
				<int>32</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
			<void method="setDirection">
				<float>-.7</float>
			</void>
		</object>
		<object id="allumee" class="ArrowButtonPainter">
			<void method="setCorner">
				<int>32</int>
			</void>
			<void method="setBackgroundColor">
				<string>#FFA848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
			<void method="setDirection">
				<float>-.7</float>
			</void>
		</object>
		<state>
			<imagePainter method="toggleButtonBackground" idref="eteinte"/>
		</state>
		<state value="SELECTED">
			<imagePainter method="toggleButtonBackground" idref="allumee"/>
		</state>
	</style>	
	<bind style="arrowUpToggleButtonStyle" type="name" key="ArrowUpToggleButton"/>


	<style id="arrowDownToggleButtonStyle">	
		<object id="eteinte" class="ArrowButtonPainter">
			<void method="setCorner">
				<int>32</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
			<void method="setDirection">
				<float>.7</float>
			</void>
		</object>
		<object id="allumee" class="ArrowButtonPainter">
			<void method="setCorner">
				<int>32</int>
			</void>
			<void method="setBackgroundColor">
				<string>#FFA848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
			<void method="setDirection">
				<float>.7</float>
			</void>
		</object>
		<state>
			<imagePainter method="toggleButtonBackground" idref="eteinte"/>
		</state>
		<state value="SELECTED">
			<imagePainter method="toggleButtonBackground" idref="allumee"/>
		</state>
	</style>	
	<bind style="arrowDownToggleButtonStyle" type="name" key="ArrowDownToggleButton"/>



	<style id="labelStyle">	
		<object id="roundedGreyLabel" class="RoundedBoxPainter"/>
		<state>
			<insets top="10" left="10" right="10" bottom="10"/>	
			<imagePainter method="labelBackground" idref="roundedGreyLabel"/>
		</state>
	</style>
	<bind style="labelStyle" type="region" key="Label"/>
	
	<style id="listStyle">
		<insets top="10" left="10" right="10" bottom="10"/>	
		<state>
			<property key="List.cellHeight" type="integer" value="30"/>
			<color value="RED" type="TEXT_BACKGROUND"/>
			<color value="WHITE" type="FOREGROUND"/>
			<color value="WHITE" type="TEXT_FOREGROUND"/>
		</state>
		<state value="SELECTED">
			<color value="#FFA848" type="TEXT_BACKGROUND"/>
			<color value="BLACK" type="TEXT_FOREGROUND"/>
		</state>
	</style>
	<bind style="listStyle" type="region" key="List"/>

	<style id="checkbox">
		<object id="checkGreyBackground" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>10</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<object id="checkYellowBackground" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>10</int>
			</void>
			<void method="setBackgroundColor">
				<string>#FFA848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<imageIcon id="check_off" path="images/greyCheck.png"/>
		<imageIcon id="check_on" path="images/yellowCheck.png"/>
		<property key="CheckBox.icon" value="check_off"/>
		<state>   
			<imagePainter method="checkBoxBackground" idref="checkGreyBackground"/>
			<property key="CheckBox.icon" value="check_on"/>
		</state>
		<state value="SELECTED">   
			<imagePainter method="checkBoxBackground" idref="checkYellowBackground"/>
			<property key="CheckBox.icon" value="check_on"/>
			<color value="BLACK" type="TEXT_FOREGROUND"/>
		</state>
	</style>
	<bind style="checkbox" type="region" key="Checkbox"/>

	<style id="radiobutton">
		<object id="radioGreyBackground" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>10</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<object id="radioYellowBackground" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>10</int>
			</void>
			<void method="setBackgroundColor">
				<string>#FFA848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<imageIcon id="radio_off" path="images/greyRadio.png"/>
		<imageIcon id="radio_on" path="images/yellowRadio.png"/>
		<property key="RadioButton.icon" value="radio_off"/>
		<state>   
			<imagePainter method="radioButtonBackground" idref="radioGreyBackground"/>
			<property key="RadioButton.icon" value="radio_on"/>
		</state>
		<state value="SELECTED">   
			<imagePainter method="radioButtonBackground" idref="radioYellowBackground"/>
			<property key="RadioButton.icon" value="radio_on"/>
			<color value="BLACK" type="TEXT_FOREGROUND"/>
		</state>
	</style>
	<bind style="radiobutton" type="region" key="RadioButton"/>	

	
	<style id="scrollBarArrowStyle">
		<object id="arrowGreyBackground" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>4</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<object id="arrowYellowBackground" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>4</int>
			</void>
			<void method="setBackgroundColor">
				<string>#FFA848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
	  	<property key="ArrowButton.size" type="integer" value="30" />
	    <state>
	        <imagePainter method="arrowButtonBackground" idref="arrowGreyBackground" />
	        <imagePainter method="arrowButtonForeground" path="images/scrollBar-up.png" center="true" direction="north" />
	        <imagePainter method="arrowButtonForeground" path="images/scrollBar-down.png" center="true" direction="south" />
	        <imagePainter method="arrowButtonForeground" path="images/scrollBar-left.png" center="true" direction="west" />
	        <imagePainter method="arrowButtonForeground" path="images/scrollBar-right.png" center="true" direction="east" />
	    </state>
		<state value="PRESSED">
	        <imagePainter method="arrowButtonBackground" idref="arrowYellowBackground" />
		</state>
	</style>
	<bind style="scrollBarArrowStyle" type="REGION" key="ArrowButton" />

	<style id="scrollBarThumbStyle">
		<object id="thumbGreyBackground" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>4</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
	    <state>
	        <imagePainter method="scrollBarThumbBackground" idref="thumbGreyBackground" />
	    </state>
	</style>
	<bind style="scrollBarThumbStyle" type="REGION" key="ScrollBarThumb" />

	<style id="scrollBarTrackStyle">
		<state>
		</state>
	</style>
	<bind style="scrollBarTrackStyle" type="REGION" key="ScrollBarTrack" />

	<style id="scrollBarStyle">
	  	<property key="ScrollBar.thumbHeight" type="integer" value="30" />
		<property key="ScrollBar.minimumThumbSize" type="Dimension" value="30 30" />
	</style>
	<bind style="scrollBarStyle" type="REGION" key="ScrollBar" />

	<style id="progressBarStyle">
		<object id="progressBarForeground" class="RoundedBoxPainter">
			<void method="setCorner">
				<int>30</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<object id="progressBarBorder" class="RoundedBoxPainter">		
			<void method="setCorner">
				<int>30</int>
			</void>
			<void method="setBackgroundColor">
				<string>#484848</string>
			</void>
			<void method="setBorderColor">
				<string>#FFFFFF</string>
			</void>
		</object>
		<state>
			<imagePainter method="progressBarForeground" idref="progressBarForeground" />
			<imagePainter method="progressBarBorder" idref="progressBarBorder"/>
		</state>
	</style>
	<bind style="progressBarStyle" type="REGION" key="progressBar" />

</synth>